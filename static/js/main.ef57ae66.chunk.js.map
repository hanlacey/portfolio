{"version":3,"sources":["components/Header.js","components/ProjectCard.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","id","href","ProjectCards","this","projectLink","projectTitle","projectDescription","React","Component","App","state","projects","title","description","link","map","project","console","log","ProjectCard","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAsBeA,MApBf,SAAgBC,GACZ,OACI,qBAAKC,UAAU,YAAf,SACI,kDAEK,oBAAGC,GAAG,WAAN,yCAC+B,uBAD/B,gDAID,oBAAGA,GAAG,qBAAN,UACI,mBAAGA,GAAG,WAAWC,KAAK,6BAAtB,oBACA,mBAAGD,GAAG,WAAWC,KAAK,+BAAtB,sBACA,mBAAGD,GAAG,WAAWC,KAAK,6BAAtB,iCAHJ,4BCKDC,E,4JAZX,WACI,OACI,sBAAKH,UAAU,eAAf,UACI,mBAAGC,GAAG,gBAAgBC,KAAI,UAAKE,KAAKL,MAAMM,aAA1C,SACED,KAAKL,MAAMO,eACb,mBAAGL,GAAG,qBAAN,SAA4BG,KAAKL,MAAMQ,4B,GAP5BC,IAAMC,WC8ClBC,E,4MA1CbC,MAAQ,CACNC,SAAU,CACR,CACEC,MAAO,cACPC,YAAa,0OACbC,KAAM,4CAER,CACEF,MAAO,mBACPC,YAAa,wDACbC,KAAM,+BAER,CACEF,MAAO,iBACPC,YAAa,gCACbC,KAAM,iC,4CAIZ,WAOE,OACE,sBAAKf,UAAU,MAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,yBAAf,SACGI,KAAKO,MAAMC,SAASI,KAAI,SAACC,GAExB,OADAC,QAAQC,IAAIF,EAAQJ,OACb,cAACO,EAAD,CAAad,aAAcW,EAAQJ,MAAON,mBAAoBU,EAAQH,YAAaT,YAAaY,EAAQF,mB,GAjCzGP,IAAMC,WCOTY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.ef57ae66.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header(props) {\n    return (\n        <div className=\"title-bar\">\n            <header>\n                Hannah Lacey\n                 <p id=\"bio-line\">\n                    Trainee full stack developer<br></br>\n                Currently training at Northcoders bootcamp\n            </p>\n                <p id=\"bio-link-container\">\n                    <a id=\"bio-link\" href=\"http://github.com/hanlacey\">Github</a>\n                    <a id=\"bio-link\" href=\"http://linkedin.com/hanlacey\">LinkedIn</a>\n                    <a id=\"bio-link\" href=\"mailto:hlaceydev@gmail.com\">hlaceydev@gmail.com</a>                </p>\n\n            </header>\n\n        </div>\n    );\n}\n\nexport default Header;\n\n","import React from 'react';\n\nclass ProjectCards extends React.Component {\n\n    render() {\n        return (\n            <div className=\"project-card\" >\n                <a id=\"project-title\" href={`${this.props.projectLink}`}\n                >{this.props.projectTitle}</a>\n                <p id=\"projectDescription\">{this.props.projectDescription}</p>\n            </div>\n\n        );\n    }\n}\n\nexport default ProjectCards;\n\n","import './main.css';\nimport React from \"react\"\nimport Header from './components/Header'\nimport ProjectCard from './components/ProjectCard'\n\nclass App extends React.Component {\n  state = {\n    projects: [\n      {\n        title: \"NC News API\",\n        description: \"RESTful API used to get, post, delete and vote on articles and comments, replicating the functionality of an online reddit-style forum. Built with Node.js, Express.js, PostgreSQL, Knex.js, and tested using Jest. Hosted with Heroku.\",\n        link: \"https://hannah-nc-news.herokuapp.com/api\"\n      },\n      {\n        title: \"Watch this space\",\n        description: \"Please watch this space for new projects ðŸ˜Š\",\n        link: \"sorry there's nowhere to go\"\n      },\n      {\n        title: \"And this space\",\n        description: \"Please also watch this one...\",\n        link: \"sorry there's nowhere to go\"\n      }\n    ]\n  }\n  render() {\n    // const ncNews = this.state.projects[0].ncNews\n    // const watchThisSpace = this.state.projects[1].watchThisSpace\n    // const secondSpaceToWatch = this.state.projects[2].secondSpaceToWatch\n    // //map ???\n\n\n    return (\n      <div className=\"App\">\n        <Header />\n        <div className=\"project-card-container\">\n          {this.state.projects.map((project) => {\n            console.log(project.title);\n            return <ProjectCard projectTitle={project.title} projectDescription={project.description} projectLink={project.link} />\n          })\n          }\n        </div>\n        {/* <ProjectCard projectTitle={projects[1].watchThisSpace.title} projectDescription={projects[1].watchThisSpace.description} /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './main.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}